<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">

<!-- The most important thing to understand is that there are 2 layers of application contexts,
 and they each have default XML files to load beans from
 1.Servlet Application Context
 2.Root application context
  -->

  <display-name>Archetype Created Web Application</display-name>
    <!-- 
	The Each Spring DispatcherServlet defined in the web.xml file gets its own application context. 
	If there is a Root application context (i.e. if a ContextLoaderListener is defined), then 
	that will be the parent of the servlet context and the beans will be available for use in 
	the servlet context(s). By default, DispatcherServlet loads beans from the file
	 /WEB-INF/<servlet-name>-servlet.xml -->
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>WEB-INF/dispatcher-servlet.xml</param-value>
        </init-param>  
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>*.html</url-pattern>
    </servlet-mapping>
    
    <session-config>
        <session-timeout>
            30
        </session-timeout>
    </session-config>
    <welcome-file-list>
        <welcome-file>redirect.jsp</welcome-file>
    </welcome-file-list>

	<!--The Root application context is created 
		when you specify a ContextLoaderListener in your web.xml file. If you don't 
		specify a listener, then there will be no Root context (which is valid). 
		It allows you to define beans that will be available to all the servlet
		 contexts.REMEMBER: This context is OPTIONAL, and will only be created if 
		 you specify a ContextLoaderListener -->
    <listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
    <context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/spring-security.xml,
			/WEB-INF/spring-database.xml
		</param-value>
	</context-param>
	
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
</web-app>
